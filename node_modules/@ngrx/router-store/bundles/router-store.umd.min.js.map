{"version":3,"sources":["modules/router-store/router-store.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","routerStore","ng","core","router","rxjs","this","store","RouterStateSerializer","DefaultRouterStateSerializer","prototype","serialize","routerState","root","serializeRoute","url","route","_this","children","map","c","params","paramMap","data","outlet","routeConfig","component","undefined","queryParams","queryParamMap","fragment","parent","firstChild","pathFromRoot","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","_ROUTER_CONFIG","InjectionToken","ROUTER_CONFIG","DEFAULT_ROUTER_FEATURENAME","_createDefaultRouterConfig","config","_config","stateKey","ɵ0","StoreRouterConnectingModule","store$$1","router$$1","serializer","lastEvent","dispatchTriggeredByRouter","navigationTriggeredByDispatch","setUpBeforePreactivationHook","setUpStoreStateListener","setUpStateRollbackEvents","forRoot","ngModule","providers","provide","useValue","useFactory","deps","hooks","beforePreactivation","shouldDispatchRouterNavigation","dispatchRouterNavigation","of","subscribe","storeState","pipe","select","navigateIfNeeded","state","NavigationStart","navigateByUrl","events","e","RoutesRecognized","lastRoutesRecognized","NavigationCancel","dispatchRouterCancel","NavigationError","dispatchRouterError","NavigationEnd","dispatchRouterAction","event","id","urlAfterRedirects","type","payload","dispatch","decorators","NgModule","args","useClass","ctorParameters","Store","Router","Inject","ɵngrx_modules_router_store_router_store_a","ɵngrx_modules_router_store_router_store_b","ROUTER_ERROR","ROUTER_CANCEL","ROUTER_NAVIGATION","routerReducer","action","navigationId","defineProperty","value"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.1.2\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@ngrx/store'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/router-store', ['exports', '@angular/core', '@angular/router', '@ngrx/store', 'rxjs'], factory) :\n    (factory((global.ngrx = global.ngrx || {}, global.ngrx.routerStore = {}),global.ng.core,global.ng.router,global['@ngrx/store'],global.rxjs));\n}(this, (function (exports,core,router,store,rxjs) { 'use strict';\n\n    var RouterStateSerializer = /** @class */ (function () {\n        function RouterStateSerializer() {\n        }\n        return RouterStateSerializer;\n    }());\n    var DefaultRouterStateSerializer = /** @class */ (function () {\n        function DefaultRouterStateSerializer() {\n        }\n        DefaultRouterStateSerializer.prototype.serialize = function (routerState) {\n            return {\n                root: this.serializeRoute(routerState.root),\n                url: routerState.url,\n            };\n        };\n        DefaultRouterStateSerializer.prototype.serializeRoute = function (route) {\n            var _this = this;\n            var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n            return {\n                params: route.params,\n                paramMap: route.paramMap,\n                data: route.data,\n                url: route.url,\n                outlet: route.outlet,\n                routeConfig: {\n                    component: route.routeConfig ? route.routeConfig.component : undefined,\n                },\n                queryParams: route.queryParams,\n                queryParamMap: route.queryParamMap,\n                fragment: route.fragment,\n                component: (route.routeConfig\n                    ? route.routeConfig.component\n                    : undefined),\n                root: undefined,\n                parent: undefined,\n                firstChild: children[0],\n                pathFromRoot: undefined,\n                children: children,\n            };\n        };\n        return DefaultRouterStateSerializer;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    /**\n     * An action dispatched when the router navigates.\n     */\n    var ROUTER_NAVIGATION = 'ROUTER_NAVIGATION';\n    /**\n     * An action dispatched when the router cancels navigation.\n     */\n    var ROUTER_CANCEL = 'ROUTER_CANCEL';\n    /**\n     * An action dispatched when the router errors.\n     */\n    var ROUTER_ERROR = 'ROUTE_ERROR';\n    function routerReducer(state, action) {\n        switch (action.type) {\n            case ROUTER_NAVIGATION:\n            case ROUTER_ERROR:\n            case ROUTER_CANCEL:\n                return {\n                    state: action.payload.routerState,\n                    navigationId: action.payload.event.id,\n                };\n            default:\n                return state;\n        }\n    }\n    var _ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Internal Configuration');\n    var ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Configuration');\n    var DEFAULT_ROUTER_FEATURENAME = 'routerReducer';\n    function _createDefaultRouterConfig(config) {\n        var _config;\n        if (typeof config === 'function') {\n            _config = config();\n        }\n        else {\n            _config = config || {};\n        }\n        return __assign({ stateKey: DEFAULT_ROUTER_FEATURENAME }, _config);\n    }\n    var ɵ0 = { stateKey: DEFAULT_ROUTER_FEATURENAME };\n    /**\n     * Connects RouterModule with StoreModule.\n     *\n     * During the navigation, before any guards or resolvers run, the router will dispatch\n     * a ROUTER_NAVIGATION action, which has the following signature:\n     *\n     * ```\n     * export type RouterNavigationPayload = {\n     *   routerState: SerializedRouterStateSnapshot,\n     *   event: RoutesRecognized\n     * }\n     * ```\n     *\n     * Either a reducer or an effect can be invoked in response to this action.\n     * If the invoked reducer throws, the navigation will be canceled.\n     *\n     * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n     * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n     *\n     * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n     * which can be used to restore the consistency of the store.\n     *\n     * Usage:\n     *\n     * ```typescript\n     * @NgModule({\n     *   declarations: [AppCmp, SimpleCmp],\n     *   imports: [\n     *     BrowserModule,\n     *     StoreModule.forRoot(mapOfReducers),\n     *     RouterModule.forRoot([\n     *       { path: '', component: SimpleCmp },\n     *       { path: 'next', component: SimpleCmp }\n     *     ]),\n     *     StoreRouterConnectingModule\n     *   ],\n     *   bootstrap: [AppCmp]\n     * })\n     * export class AppModule {\n     * }\n     * ```\n     */\n    var StoreRouterConnectingModule = /** @class */ (function () {\n        function StoreRouterConnectingModule(store$$1, router$$1, serializer, config) {\n            this.store = store$$1;\n            this.router = router$$1;\n            this.serializer = serializer;\n            this.config = config;\n            this.lastEvent = null;\n            this.dispatchTriggeredByRouter = false;\n            this.navigationTriggeredByDispatch = false;\n            this.stateKey = this.config.stateKey;\n            this.setUpBeforePreactivationHook();\n            this.setUpStoreStateListener();\n            this.setUpStateRollbackEvents();\n        }\n        StoreRouterConnectingModule.forRoot = function (config) {\n            if (config === void 0) { config = {}; }\n            return {\n                ngModule: StoreRouterConnectingModule,\n                providers: [\n                    { provide: _ROUTER_CONFIG, useValue: config },\n                    {\n                        provide: ROUTER_CONFIG,\n                        useFactory: _createDefaultRouterConfig,\n                        deps: [_ROUTER_CONFIG],\n                    },\n                ],\n            };\n        };\n        StoreRouterConnectingModule.prototype.setUpBeforePreactivationHook = function () {\n            var _this = this;\n            this.router.hooks.beforePreactivation = function (routerState) {\n                _this.routerState = _this.serializer.serialize(routerState);\n                if (_this.shouldDispatchRouterNavigation()) {\n                    _this.dispatchRouterNavigation();\n                }\n                return rxjs.of(true);\n            };\n        };\n        StoreRouterConnectingModule.prototype.setUpStoreStateListener = function () {\n            var _this = this;\n            this.store.subscribe(function (s) {\n                _this.storeState = s;\n            });\n            this.store.pipe(store.select(this.stateKey)).subscribe(function () {\n                _this.navigateIfNeeded();\n            });\n        };\n        StoreRouterConnectingModule.prototype.shouldDispatchRouterNavigation = function () {\n            if (!this.storeState[this.stateKey])\n                return true;\n            return !this.navigationTriggeredByDispatch;\n        };\n        StoreRouterConnectingModule.prototype.navigateIfNeeded = function () {\n            if (!this.storeState[this.stateKey] ||\n                !this.storeState[this.stateKey].state) {\n                return;\n            }\n            if (this.dispatchTriggeredByRouter)\n                return;\n            if (this.lastEvent instanceof router.NavigationStart)\n                return;\n            if (this.router.url !== this.storeState[this.stateKey].state.url) {\n                this.navigationTriggeredByDispatch = true;\n                this.router.navigateByUrl(this.storeState[this.stateKey].state.url);\n            }\n        };\n        StoreRouterConnectingModule.prototype.setUpStateRollbackEvents = function () {\n            var _this = this;\n            this.router.events.subscribe(function (e) {\n                _this.lastEvent = e;\n                if (e instanceof router.RoutesRecognized) {\n                    _this.lastRoutesRecognized = e;\n                }\n                else if (e instanceof router.NavigationCancel) {\n                    _this.dispatchRouterCancel(e);\n                }\n                else if (e instanceof router.NavigationError) {\n                    _this.dispatchRouterError(e);\n                }\n                else if (e instanceof router.NavigationEnd) {\n                    _this.dispatchTriggeredByRouter = false;\n                    _this.navigationTriggeredByDispatch = false;\n                }\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterNavigation = function () {\n            this.dispatchRouterAction(ROUTER_NAVIGATION, {\n                routerState: this.routerState,\n                event: new router.RoutesRecognized(this.lastRoutesRecognized.id, this.lastRoutesRecognized.url, this.lastRoutesRecognized.urlAfterRedirects, this.routerState),\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterCancel = function (event) {\n            this.dispatchRouterAction(ROUTER_CANCEL, {\n                routerState: this.routerState,\n                storeState: this.storeState,\n                event: event,\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterError = function (event) {\n            this.dispatchRouterAction(ROUTER_ERROR, {\n                routerState: this.routerState,\n                storeState: this.storeState,\n                event: new router.NavigationError(event.id, event.url, \"\" + event),\n            });\n        };\n        StoreRouterConnectingModule.prototype.dispatchRouterAction = function (type, payload) {\n            this.dispatchTriggeredByRouter = true;\n            try {\n                this.store.dispatch({ type: type, payload: payload });\n            }\n            finally {\n                this.dispatchTriggeredByRouter = false;\n                this.navigationTriggeredByDispatch = false;\n            }\n        };\n        StoreRouterConnectingModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            { provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer },\n                            {\n                                provide: _ROUTER_CONFIG,\n                                useValue: ɵ0,\n                            },\n                            {\n                                provide: ROUTER_CONFIG,\n                                useFactory: _createDefaultRouterConfig,\n                                deps: [_ROUTER_CONFIG],\n                            },\n                        ],\n                    },] }\n        ];\n        /** @nocollapse */\n        StoreRouterConnectingModule.ctorParameters = function () { return [\n            { type: store.Store, },\n            { type: router.Router, },\n            { type: RouterStateSerializer, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [ROUTER_CONFIG,] },] },\n        ]; };\n        return StoreRouterConnectingModule;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_router_store_router_store_a = _ROUTER_CONFIG;\n    exports.ɵngrx_modules_router_store_router_store_b = _createDefaultRouterConfig;\n    exports.ROUTER_ERROR = ROUTER_ERROR;\n    exports.ROUTER_CANCEL = ROUTER_CANCEL;\n    exports.ROUTER_NAVIGATION = ROUTER_NAVIGATION;\n    exports.routerReducer = routerReducer;\n    exports.StoreRouterConnectingModule = StoreRouterConnectingModule;\n    exports.ROUTER_CONFIG = ROUTER_CONFIG;\n    exports.DEFAULT_ROUTER_FEATURENAME = DEFAULT_ROUTER_FEATURENAME;\n    exports.RouterStateSerializer = RouterStateSerializer;\n    exports.DefaultRouterStateSerializer = DefaultRouterStateSerializer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router-store.umd.js.map\n"]}