!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-file-drop",["exports","@angular/core","rxjs","@angular/common"],t):t(e["ngx-file-drop"]={},e.ng.core,e.rxjs,e.ng.common)}(this,function(e,r,i,t){"use strict";var p=function s(e,t){this.relativePath=e,this.fileEntry=t},l=function a(e){this.files=e},n=function(){function e(e,t){var n=this;this.zone=e,this.renderer=t,this.accept="*",this.dropZoneLabel="",this.dropZoneClassName="ngx-file-drop__drop-zone drop-zone",this.contentClassName="ngx-file-drop__content content",this.showBrowseBtn=!1,this.browseBtnClassName="btn btn-primary btn-xs ngx-file-drop__browse-btn",this.browseBtnLabel="Browse files",this.onFileDrop=new r.EventEmitter,this.onFileOver=new r.EventEmitter,this.onFileLeave=new r.EventEmitter,this.isDraggingOverDropZone=!1,this.globalDraggingInProgress=!1,this.files=[],this.numOfActiveReadEntries=0,this.helperFormEl=null,this.fileInputPlaceholderEl=null,this.dropEventTimerSubscription=null,this._disabled=!1,this.globalDragStartListener=this.renderer.listen("document","dragstart",function(e){n.globalDraggingInProgress=!0}),this.globalDragEndListener=this.renderer.listen("document","dragend",function(e){n.globalDraggingInProgress=!1})}return Object.defineProperty(e.prototype,"headertext",{get:function(){return this.dropZoneLabel},set:function(e){this.dropZoneLabel=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customstyle",{get:function(){return this.dropZoneClassName},set:function(e){this.dropZoneClassName=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customContentStyle",{get:function(){return this.contentClassName},set:function(e){this.contentClassName=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=null!=e&&""+e!="false"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disableIf",{get:function(){return this.disabled},set:function(e){this.disabled=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customBtnStyling",{get:function(){return this.browseBtnClassName},set:function(e){this.browseBtnClassName=e},enumerable:!0,configurable:!0}),e.prototype.ngOnDestroy=function(){this.dropEventTimerSubscription&&(this.dropEventTimerSubscription.unsubscribe(),this.dropEventTimerSubscription=null),this.globalDragStartListener(),this.globalDragEndListener(),this.files=[],this.helperFormEl=null,this.fileInputPlaceholderEl=null},e.prototype.onDragOver=function(e){this.isDropzoneDisabled()||(this.isDraggingOverDropZone||(this.isDraggingOverDropZone=!0,this.onFileOver.emit(e)),this.preventAndStop(e))},e.prototype.onDragLeave=function(e){this.isDropzoneDisabled()||(this.isDraggingOverDropZone&&(this.isDraggingOverDropZone=!1,this.onFileLeave.emit(e)),this.preventAndStop(e))},e.prototype.dropFiles=function(e){if(!this.isDropzoneDisabled()&&(this.isDraggingOverDropZone=!1,e.dataTransfer)){e.dataTransfer.dropEffect="copy";var t=void 0;t=e.dataTransfer.items?e.dataTransfer.items:e.dataTransfer.files,this.preventAndStop(e),this.checkFiles(t)}},e.prototype.onBrowseButtonClick=function(e){this.fileSelector&&this.fileSelector.nativeElement&&this.fileSelector.nativeElement.click()},e.prototype.uploadFiles=function(e){if(!this.isDropzoneDisabled()&&e.target){var t=e.target.files||[];this.checkFiles(t),this.resetFileInput()}},e.prototype.checkFiles=function(o){for(var e=this,t=function(e){var t=o[e],n=null;if(s.canGetAsEntry(t)&&(n=t.webkitGetAsEntry()),n)if(n.isFile){i=new p(n.name,n);s.addToQueue(i)}else n.isDirectory&&s.traverseFileTree(n,n.name);else if(t){var r={name:t.name,isDirectory:!1,isFile:!0,file:function(e){e(t)}},i=new p(r.name,r);s.addToQueue(i)}},s=this,n=0;n<o.length;n++)t(n);this.dropEventTimerSubscription&&this.dropEventTimerSubscription.unsubscribe(),this.dropEventTimerSubscription=i.timer(200,200).subscribe(function(){0<e.files.length&&0===e.numOfActiveReadEntries&&(e.onFileDrop.emit(new l(e.files)),e.files=[])})},e.prototype.traverseFileTree=function(i,o){var s=this;if(i.isFile){var e=new p(o,i);this.files.push(e)}else{o+="/";var t=i.createReader(),l=[],a=function(){s.numOfActiveReadEntries++,t.readEntries(function(e){if(e.length)l=l.concat(e),a();else if(0===l.length){var t=new p(o,i);s.zone.run(function(){s.addToQueue(t)})}else for(var n=function(e){s.zone.run(function(){s.traverseFileTree(l[e],o+l[e].name)})},r=0;r<l.length;r++)n(r);s.numOfActiveReadEntries--})};a()}},e.prototype.resetFileInput=function(){if(this.fileSelector&&this.fileSelector.nativeElement){var e=this.fileSelector.nativeElement,t=e.parentElement,n=this.getHelperFormElement(),r=this.getFileInputPlaceholderElement();t!==n&&(this.renderer.insertBefore(t,r,e),this.renderer.appendChild(n,e),n.reset(),this.renderer.insertBefore(t,e,r),this.renderer.removeChild(t,r))}},e.prototype.getHelperFormElement=function(){return this.helperFormEl||(this.helperFormEl=this.renderer.createElement("form")),this.helperFormEl},e.prototype.getFileInputPlaceholderElement=function(){return this.fileInputPlaceholderEl||(this.fileInputPlaceholderEl=this.renderer.createElement("div")),this.fileInputPlaceholderEl},e.prototype.canGetAsEntry=function(e){return!!e.webkitGetAsEntry},e.prototype.isDropzoneDisabled=function(){return this.globalDraggingInProgress||this.disabled},e.prototype.addToQueue=function(e){this.files.push(e)},e.prototype.preventAndStop=function(e){e.stopPropagation(),e.preventDefault()},e.decorators=[{type:r.Component,args:[{selector:"file-drop",template:'<div [className]="dropZoneClassName"\r\n     [class.over]="isDraggingOverDropZone"\r\n     [class.ngx-file-drop__drop-zone--over]="isDraggingOverDropZone"\r\n     (drop)="dropFiles($event)"\r\n     (dragover)="onDragOver($event)"\r\n     (dragleave)="onDragLeave($event)">\r\n    <div [className]="contentClassName">\r\n        <ng-content></ng-content>\r\n        <div *ngIf="dropZoneLabel" class="ngx-file-drop__drop-zone-label">{{dropZoneLabel}}</div>\r\n        <div *ngIf="showBrowseBtn">\r\n            <input type="file" #fileSelector [accept]="accept" (change)="uploadFiles($event)" multiple class="ngx-file-drop__file-input" />\r\n            <input type="button" [className]="browseBtnClassName" value="{{browseBtnLabel}}" (click)="onBrowseButtonClick($event)" />\r\n        </div>\r\n    </div>\r\n</div>\r\n',styles:[".drop-zone{height:100px;margin:auto;border:2px dotted #0782d0;border-radius:30px}.over{background-color:rgba(147,147,147,.5)}.content{display:flex;align-items:center;justify-content:center;height:100px;color:#0782d0}.ngx-file-drop__drop-zone-label{text-align:center}.ngx-file-drop__file-input{display:none}"]}]}],e.ctorParameters=function(){return[{type:r.NgZone},{type:r.Renderer2}]},e.propDecorators={accept:[{type:r.Input}],dropZoneLabel:[{type:r.Input}],headertext:[{type:r.Input}],dropZoneClassName:[{type:r.Input}],customstyle:[{type:r.Input}],contentClassName:[{type:r.Input}],customContentStyle:[{type:r.Input}],disabled:[{type:r.Input}],disableIf:[{type:r.Input}],showBrowseBtn:[{type:r.Input}],browseBtnClassName:[{type:r.Input}],customBtnStyling:[{type:r.Input}],browseBtnLabel:[{type:r.Input}],onFileDrop:[{type:r.Output}],onFileOver:[{type:r.Output}],onFileLeave:[{type:r.Output}],fileSelector:[{type:r.ViewChild,args:["fileSelector"]}]},e}(),o=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{declarations:[n],exports:[n],imports:[t.CommonModule],providers:[],bootstrap:[n]}]}],e}();e.FileComponent=n,e.FileDropModule=o,e.UploadFile=p,e.UploadEvent=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-file-drop.umd.min.js.map