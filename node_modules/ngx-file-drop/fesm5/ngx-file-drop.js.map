{"version":3,"file":"ngx-file-drop.js.map","sources":["ng://ngx-file-drop/src/lib/ngx-drop/upload-file.model.ts","ng://ngx-file-drop/src/lib/ngx-drop/upload-event.model.ts","ng://ngx-file-drop/src/lib/ngx-drop/file-drop.component.ts","ng://ngx-file-drop/src/lib/ngx-drop/file-drop.module.ts"],"sourcesContent":["import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nexport class UploadFile {\r\n    constructor(\r\n        public relativePath: string,\r\n        public fileEntry: FileSystemEntry) {\r\n    }\r\n}\r\n","import { UploadFile } from './upload-file.model';\r\n\r\nexport class UploadEvent {\r\n    constructor(\r\n        public files: UploadFile[]) {\r\n    }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  NgZone,\r\n  OnDestroy,\r\n  Renderer2,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { timer, Subscription } from 'rxjs';\r\n\r\nimport { UploadFile } from './upload-file.model';\r\nimport { UploadEvent } from './upload-event.model';\r\nimport { FileSystemFileEntry, FileSystemEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n@Component({\r\n  selector: 'file-drop',\r\n  templateUrl: './file-drop.component.html',\r\n  styleUrls: ['./file-drop.component.scss'],\r\n})\r\nexport class FileComponent implements OnDestroy {\r\n\r\n  @Input()\r\n  public accept: string = '*';\r\n\r\n  @Input()\r\n  public dropZoneLabel: string = '';\r\n  /** @deprecated Will be removed in the next major version. Use `dropZoneLabel` instead. */\r\n  public get headertext(): string { return this.dropZoneLabel; }\r\n  /** @deprecated Will be removed in the next major version. Use `dropZoneLabel` instead. */\r\n  @Input()\r\n  public set headertext(value: string) {\r\n    this.dropZoneLabel = value;\r\n  }\r\n\r\n  @Input()\r\n  public dropZoneClassName: string = 'ngx-file-drop__drop-zone drop-zone';\r\n  /** @deprecated Will be removed in the next major version. Use `dropZoneClassName` instead. */\r\n  public get customstyle(): string { return this.dropZoneClassName; }\r\n  /** @deprecated Will be removed in the next major version. Use `dropZoneClassName` instead. */\r\n  @Input()\r\n  public set customstyle(value: string) {\r\n    this.dropZoneClassName = value;\r\n  }\r\n\r\n  @Input()\r\n  public contentClassName: string = 'ngx-file-drop__content content';\r\n  /** @deprecated Will be removed in the next major version. Use `contentClassName` instead. */\r\n  public get customContentStyle(): string { return this.contentClassName; }\r\n  /** @deprecated Will be removed in the next major version. Use `contentClassName` instead. */\r\n  @Input()\r\n  public set customContentStyle(value: string) {\r\n    this.contentClassName = value;\r\n  }\r\n\r\n  public get disabled(): boolean { return this._disabled; }\r\n  @Input()\r\n  public set disabled(value: boolean) {\r\n    this._disabled = (value != null && `${value}` !== 'false');\r\n  }\r\n  /** @deprecated Will be removed in the next major version. Use `disabled` instead. */\r\n  public get disableIf(): boolean { return this.disabled; }\r\n  /** @deprecated Will be removed in the next major version. Use `disabled` instead. */\r\n  @Input()\r\n  public set disableIf(value: boolean) {\r\n    this.disabled = value;\r\n  }\r\n\r\n  @Input()\r\n  public showBrowseBtn: boolean = false;\r\n  @Input()\r\n  public browseBtnClassName: string = 'btn btn-primary btn-xs ngx-file-drop__browse-btn';\r\n  /** @deprecated Will be removed in the next major version. Use `browseBtnClassName` instead. */\r\n  public get customBtnStyling(): string { return this.browseBtnClassName; }\r\n  /** @deprecated Will be removed in the next major version. Use `browseBtnClassName` instead. */\r\n  @Input()\r\n  public set customBtnStyling(value: string) {\r\n    this.browseBtnClassName = value;\r\n  }\r\n\r\n  @Input()\r\n  public browseBtnLabel: string = 'Browse files';\r\n\r\n  @Output()\r\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\r\n  @Output()\r\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output()\r\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('fileSelector')\r\n  public fileSelector: ElementRef;\r\n\r\n  public isDraggingOverDropZone: boolean = false;\r\n\r\n  private globalDraggingInProgress: boolean = false;\r\n  private globalDragStartListener: () => void;\r\n  private globalDragEndListener: () => void;\r\n\r\n  private files: UploadFile[] = [];\r\n  private numOfActiveReadEntries: number = 0;\r\n\r\n  private helperFormEl: HTMLFormElement | null = null;\r\n  private fileInputPlaceholderEl: HTMLDivElement | null = null;\r\n\r\n  private dropEventTimerSubscription: Subscription | null = null;\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.globalDragStartListener = this.renderer.listen('document', 'dragstart', (evt: Event) => {\r\n      this.globalDraggingInProgress = true;\r\n    });\r\n    this.globalDragEndListener = this.renderer.listen('document', 'dragend', (evt: Event) => {\r\n      this.globalDraggingInProgress = false;\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.dropEventTimerSubscription) {\r\n      this.dropEventTimerSubscription.unsubscribe();\r\n      this.dropEventTimerSubscription = null;\r\n    }\r\n    this.globalDragStartListener();\r\n    this.globalDragEndListener();\r\n    this.files = [];\r\n    this.helperFormEl = null;\r\n    this.fileInputPlaceholderEl = null;\r\n  }\r\n\r\n  public onDragOver(event: Event): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      if (!this.isDraggingOverDropZone) {\r\n        this.isDraggingOverDropZone = true;\r\n        this.onFileOver.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public onDragLeave(event: Event): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      if (this.isDraggingOverDropZone) {\r\n        this.isDraggingOverDropZone = false;\r\n        this.onFileLeave.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public dropFiles(event: DragEvent): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      this.isDraggingOverDropZone = false;\r\n      if (event.dataTransfer) {\r\n        event.dataTransfer.dropEffect = 'copy';\r\n        let items: FileList | DataTransferItemList;\r\n        if (event.dataTransfer.items) {\r\n          items = event.dataTransfer.items;\r\n        } else {\r\n          items = event.dataTransfer.files;\r\n        }\r\n        this.preventAndStop(event);\r\n        this.checkFiles(items);\r\n      }\r\n    }\r\n  }\r\n\r\n  public onBrowseButtonClick(event: MouseEvent): void {\r\n    if (this.fileSelector && this.fileSelector.nativeElement) {\r\n      (this.fileSelector.nativeElement as HTMLInputElement).click();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Processes the change event of the file input and adds the given files.\r\n   * @param Event event\r\n   */\r\n  public uploadFiles(event: Event): void {\r\n    if (!this.isDropzoneDisabled()) {\r\n      if (event.target) {\r\n        const items = (event.target as HTMLInputElement).files || ([] as any);\r\n        this.checkFiles(items);\r\n        this.resetFileInput();\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkFiles(items: FileList | DataTransferItemList): void {\r\n    for (let i = 0; i < items.length; i++) {\r\n      const item = items[i];\r\n      let entry: FileSystemEntry | null = null;\r\n      if (this.canGetAsEntry(item)) {\r\n        entry = item.webkitGetAsEntry();\r\n      }\r\n\r\n      if (!entry) {\r\n        if (item) {\r\n          const fakeFileEntry: FileSystemFileEntry = {\r\n            name: (item as File).name,\r\n            isDirectory: false,\r\n            isFile: true,\r\n            file: (callback: (filea: File) => void): void => {\r\n              callback(item as File);\r\n            },\r\n          };\r\n          const toUpload: UploadFile = new UploadFile(fakeFileEntry.name, fakeFileEntry);\r\n          this.addToQueue(toUpload);\r\n        }\r\n\r\n      } else {\r\n        if (entry.isFile) {\r\n          const toUpload: UploadFile = new UploadFile(entry.name, entry);\r\n          this.addToQueue(toUpload);\r\n\r\n        } else if (entry.isDirectory) {\r\n          this.traverseFileTree(entry, entry.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.dropEventTimerSubscription) {\r\n      this.dropEventTimerSubscription.unsubscribe();\r\n    }\r\n    this.dropEventTimerSubscription = timer(200, 200)\r\n      .subscribe(() => {\r\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n          this.onFileDrop.emit(new UploadEvent(this.files));\r\n          this.files = [];\r\n        }\r\n      });\r\n  }\r\n\r\n  private traverseFileTree(item: FileSystemEntry, path: string): void {\r\n    if (item.isFile) {\r\n      const toUpload: UploadFile = new UploadFile(path, item);\r\n      this.files.push(toUpload);\r\n\r\n    } else {\r\n      path = path + '/';\r\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\r\n      let entries: FileSystemEntry[] = [];\r\n\r\n      const readEntries = () => {\r\n        this.numOfActiveReadEntries++;\r\n        dirReader.readEntries((result) => {\r\n          if (!result.length) {\r\n            // add empty folders\r\n            if (entries.length === 0) {\r\n              const toUpload: UploadFile = new UploadFile(path, item);\r\n              this.zone.run(() => {\r\n                this.addToQueue(toUpload);\r\n              });\r\n\r\n            } else {\r\n              for (let i = 0; i < entries.length; i++) {\r\n                this.zone.run(() => {\r\n                  this.traverseFileTree(entries[i], path + entries[i].name);\r\n                });\r\n              }\r\n            }\r\n\r\n          } else {\r\n            // continue with the reading\r\n            entries = entries.concat(result);\r\n            readEntries();\r\n          }\r\n\r\n          this.numOfActiveReadEntries--;\r\n        });\r\n      };\r\n\r\n      readEntries();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n   */\r\n  private resetFileInput(): void {\r\n    if (this.fileSelector && this.fileSelector.nativeElement) {\r\n      const fileInputEl = this.fileSelector.nativeElement as HTMLInputElement;\r\n      const fileInputContainerEl = fileInputEl.parentElement;\r\n      const helperFormEl = this.getHelperFormElement();\r\n      const fileInputPlaceholderEl = this.getFileInputPlaceholderElement();\r\n\r\n      // Just a quick check so we do not mess up the DOM (will never happen though).\r\n      if (fileInputContainerEl !== helperFormEl) {\r\n        // Insert the form input placeholder in the DOM before the form input element.\r\n        this.renderer.insertBefore(fileInputContainerEl, fileInputPlaceholderEl, fileInputEl);\r\n        // Add the form input as child of the temporary form element, removing the form input from the DOM.\r\n        this.renderer.appendChild(helperFormEl, fileInputEl);\r\n        // Reset the form, thus clearing the input element of any files.\r\n        helperFormEl.reset();\r\n        // Add the file input back to the DOM in place of the file input placeholder element.\r\n        this.renderer.insertBefore(fileInputContainerEl, fileInputEl, fileInputPlaceholderEl);\r\n        // Remove the input placeholder from the DOM\r\n        this.renderer.removeChild(fileInputContainerEl, fileInputPlaceholderEl);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a cached HTML form element as a helper element to clear the file input element.\r\n   */\r\n  private getHelperFormElement(): HTMLFormElement {\r\n    if (!this.helperFormEl) {\r\n      this.helperFormEl = this.renderer.createElement('form') as HTMLFormElement;\r\n    }\r\n\r\n    return this.helperFormEl;\r\n  }\r\n\r\n  /**\r\n   * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n   */\r\n  private getFileInputPlaceholderElement(): HTMLDivElement {\r\n    if (!this.fileInputPlaceholderEl) {\r\n      this.fileInputPlaceholderEl = this.renderer.createElement('div') as HTMLDivElement;\r\n    }\r\n\r\n    return this.fileInputPlaceholderEl;\r\n  }\r\n\r\n  private canGetAsEntry(item: any): item is DataTransferItem {\r\n    return !!item.webkitGetAsEntry;\r\n  }\r\n\r\n  private isDropzoneDisabled(): boolean {\r\n    return (this.globalDraggingInProgress || this.disabled);\r\n  }\r\n\r\n  private addToQueue(item: UploadFile): void {\r\n    this.files.push(item);\r\n  }\r\n\r\n  private preventAndStop(event: Event): void {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FileComponent} from './file-drop.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileComponent,\r\n  ],\r\n  exports: [FileComponent],\r\n  imports: [CommonModule],\r\n  providers: [],\r\n  bootstrap: [FileComponent],\r\n})\r\nexport class FileDropModule {}\r\n"],"names":[],"mappings":"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"}
