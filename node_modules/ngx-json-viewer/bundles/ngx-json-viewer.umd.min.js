!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common"],n):n(e["ngx-json-viewer"]={},e.ng.core,e.ng.common)}(this,function(e,n,t){"use strict";var s=function(){function e(){this.expanded=!0,this.cleanOnChange=!0,this.segments=[]}return e.prototype.ngOnChanges=function(){var e=this;this.cleanOnChange&&(this.segments=[]),"object"==typeof this.json?Object.keys(this.json).forEach(function(n){e.segments.push(e.parseKeyValue(n,e.json[n]))}):this.segments.push(this.parseKeyValue("("+typeof this.json+")",this.json))},e.prototype.isExpandable=function(e){return"object"===e.type||"array"===e.type},e.prototype.toggle=function(e){this.isExpandable(e)&&(e.expanded=!e.expanded)},e.prototype.parseKeyValue=function(e,n){var t={key:e,value:n,type:undefined,description:""+n,expanded:this.expanded};switch(typeof t.value){case"number":t.type="number";break;case"boolean":t.type="boolean";break;case"function":t.type="function";break;case"string":t.type="string",t.description='"'+t.value+'"';break;case"undefined":t.type="undefined",t.description="undefined";break;case"object":null===t.value?(t.type="null",t.description="null"):Array.isArray(t.value)?(t.type="array",t.description="Array["+t.value.length+"] "+JSON.stringify(t.value)):t.value instanceof Date?t.type="date":(t.type="object",t.description="Object "+JSON.stringify(t.value))}return t},e}();s.decorators=[{type:n.Component,args:[{selector:"ngx-json-viewer",template:'\n    <section class="ngx-json-viewer">\n      <section\n        *ngFor="let segment of segments"\n        [ngClass]="[\'segment\', \'segment-type-\' + segment.type]">\n        <section\n          (click)="toggle(segment)"\n          [ngClass]="{\n            \'segment-main\': true,\n            \'expandable\': isExpandable(segment),\n            \'expanded\': segment.expanded\n          }">\n          <div *ngIf="isExpandable(segment)" class="toggler"></div>\n          <span class="segment-key">{{ segment.key }}</span>\n          <span class="segment-separator">: </span>\n          <span *ngIf="!segment.expanded || !isExpandable(segment)" class="segment-value">{{ segment.description }}</span>\n        </section>\n        <section *ngIf="segment.expanded && isExpandable(segment)" class="children">\n          <ngx-json-viewer [json]="segment.value" [expanded]="expanded"></ngx-json-viewer>\n        </section>\n      </section>\n    </section>\n  ',styles:['\n    @charset "UTF-8";\n    .ngx-json-viewer {\n      font-family: monospace;\n      font-size: 1em;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      position: relative; }\n      .ngx-json-viewer .segment {\n        padding: 2px;\n        margin: 1px 1px 1px 12px; }\n        .ngx-json-viewer .segment .segment-main {\n          word-wrap: break-word; }\n          .ngx-json-viewer .segment .segment-main .toggler {\n            position: absolute;\n            margin-left: -14px;\n            margin-top: 3px;\n            font-size: .8em;\n            line-height: 1.2em;\n            vertical-align: middle;\n            color: #787878; }\n            .ngx-json-viewer .segment .segment-main .toggler::after {\n              display: inline-block;\n              content: "â–º";\n              -webkit-transition: -webkit-transform 0.1s ease-in;\n              transition: -webkit-transform 0.1s ease-in;\n              transition: transform 0.1s ease-in;\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\n          .ngx-json-viewer .segment .segment-main .segment-key {\n            color: #4E187C; }\n          .ngx-json-viewer .segment .segment-main .segment-separator {\n            color: #999; }\n          .ngx-json-viewer .segment .segment-main .segment-value {\n            color: #000; }\n        .ngx-json-viewer .segment .children {\n          margin-left: 12px; }\n      .ngx-json-viewer .segment-type-string > .segment-main > .segment-value {\n        color: #FF6B6B; }\n      .ngx-json-viewer .segment-type-number > .segment-main > .segment-value {\n        color: #009688; }\n      .ngx-json-viewer .segment-type-boolean > .segment-main > .segment-value {\n        color: #b938a4; }\n      .ngx-json-viewer .segment-type-date > .segment-main > .segment-value {\n        color: #05668D; }\n      .ngx-json-viewer .segment-type-array > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-function > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        color: #fff; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        color: #fff; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        background-color: red; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-key {\n        color: #999; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        background-color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main,\n      .ngx-json-viewer .segment-type-array > .segment-main {\n        white-space: nowrap; }\n      .ngx-json-viewer .expanded > .toggler::after {\n        -webkit-transform: rotate(90deg);\n                transform: rotate(90deg); }\n      .ngx-json-viewer .expandable,\n      .ngx-json-viewer .expandable > .toggler {\n        cursor: pointer; }\n  ']}]}],s.ctorParameters=function(){return[]},s.propDecorators={json:[{type:n.Input}],expanded:[{type:n.Input}],cleanOnChange:[{type:n.Input}]};var o=function(){return function(){}}();o.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[s],exports:[s]}]}],o.ctorParameters=function(){return[]},e.NgxJsonViewerModule=o,e.NgxJsonViewerComponent=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-json-viewer.umd.min.js.map
