{"version":3,"file":"ngx-material-timepicker.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-period.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-format.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/time-adapter.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-unit.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-timepicker.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-theme.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/timepicker-time.namespace.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/overlay.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/autofocus.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TimePeriod {\n    AM = 'AM',\n    PM = 'PM'\n}\n","export enum TimeFormat {\n    TWELVE = 'hh:mm a',\n    TWENTY_FOUR = 'HH:mm'\n}\n","import * as _moment from 'moment';\nimport { Moment, unitOfTime } from 'moment';\nimport { TimeFormat } from '../models/time-format.enum';\nimport { TimePeriod } from '../models/time-period.enum';\n\nconst moment = _moment;\n\nexport class TimeAdapter {\n\n    static formatTime(time: string, format = 12): string {\n        const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\n        return moment(time, TimeFormat.TWELVE).format(timeFormat);\n    }\n\n    static convertTimeToMoment(time: string): Moment {\n        return moment(time, TimeFormat.TWELVE);\n    }\n\n    static isTimeAvailable(time: string, min?: Moment, max?: Moment, granularity?: unitOfTime.StartOf, minutesGap?: number): boolean {\n        if (!time) {\n            return;\n        }\n\n        const convertedTime = this.convertTimeToMoment(time);\n        const minutes = convertedTime.minutes();\n\n        if (minutesGap && (minutes % minutesGap !== 0)) {\n            throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\n        }\n        const isAfter = (min && !max)\n            && convertedTime.isSameOrAfter(min, granularity);\n        const isBefore = (max && !min)\n            && convertedTime.isSameOrBefore(max, granularity);\n        const isBetween = (min && max)\n            && convertedTime.isBetween(min, max, granularity, '[]');\n        const isAvailable = !min && !max;\n\n        return isAfter || isBefore || isBetween || isAvailable;\n    }\n\n    /***\n     *  Format hour according to time format (12 or 24)\n     */\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\n        if (format === 24) {\n            return currentHour;\n        }\n        const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\n\n        if (period === TimePeriod.AM && hour === 12) {\n            return 0;\n        } else if (period === TimePeriod.PM && hour === 24) {\n            return 12;\n        }\n        return hour;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ClockFaceTime} from '../models/clock-face-time.interface';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {TimePeriod} from '../models/time-period.enum';\nimport * as moment_ from 'moment';\nimport {TimeFormat} from '../models/time-format.enum';\nimport {TimeAdapter} from './time-adapter';\nimport {Moment} from 'moment';\n\nconst moment = moment_;\n\nconst DEFAULT_HOUR: ClockFaceTime = {\n    time: 12,\n    angle: 360\n};\nconst DEFAULT_MINUTE: ClockFaceTime = {\n    time: 0,\n    angle: 360\n};\n\n@Injectable()\nexport class NgxMaterialTimepickerService {\n\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\n\n    private set defaultTime(time: string) {\n        const defaultTime = moment(time, TimeFormat.TWENTY_FOUR).toDate();\n\n        if (moment(defaultTime).isValid()) {\n            this.hour = {...DEFAULT_HOUR, time: defaultTime.getHours()};\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes()};\n            this.period = <TimePeriod>time.substr(time.length - 2).toUpperCase();\n        } else {\n            this.resetTime();\n        }\n    }\n\n    set hour(hour: ClockFaceTime) {\n        this.hourSubject.next(hour);\n    }\n\n    get selectedHour(): Observable<ClockFaceTime> {\n        return this.hourSubject.asObservable();\n    }\n\n    set minute(minute: ClockFaceTime) {\n        this.minuteSubject.next(minute);\n    }\n\n    get selectedMinute(): Observable<ClockFaceTime> {\n        return this.minuteSubject.asObservable();\n    }\n\n    set period(period: TimePeriod) {\n        this.periodSubject.next(period);\n    }\n\n    get selectedPeriod(): Observable<TimePeriod> {\n        return this.periodSubject.asObservable();\n    }\n\n\n    setDefaultTimeIfAvailable(time: string, min: Moment, max: Moment, format: number, minutesGap?: number) {\n        /* Workaround to double error message*/\n        try {\n            if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\n                this.defaultTime = TimeAdapter.formatTime(time, format);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    getFullTime(format: number): string {\n        const hour = this.hourSubject.getValue().time;\n        const minute = this.minuteSubject.getValue().time;\n        const period = format === 12 ? this.periodSubject.getValue() : '';\n\n        return TimeAdapter.formatTime(`${hour}:${minute} ${period}`, format);\n    }\n\n    private resetTime(): void {\n        this.hour = {...DEFAULT_HOUR};\n        this.minute = {...DEFAULT_MINUTE};\n        this.period = TimePeriod.AM;\n    }\n}\n","export enum TimeUnit {\n    HOUR,\n    MINUTE\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable()\nexport class NgxMaterialTimepickerEventService {\n\n    private backdropClickSubject: Subject<MouseEvent> = new Subject();\n    private keydownEventSubject: Subject<KeyboardEvent> = new Subject();\n\n    get backdropClick(): Observable<MouseEvent> {\n        return this.backdropClickSubject.asObservable();\n    }\n\n    get keydownEvent(): Observable<KeyboardEvent> {\n        return this.keydownEventSubject.asObservable();\n    }\n\n    dispatchEvent(event: KeyboardEvent | MouseEvent): void {\n        switch (event.type) {\n            case 'click':\n                this.backdropClickSubject.next(<MouseEvent>event);\n                break;\n            case 'keydown':\n                this.keydownEventSubject.next(<KeyboardEvent>event);\n                break;\n            default:\n                throw new Error('no such event type');\n        }\n    }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { ClockFaceTime } from './models/clock-face-time.interface';\nimport { TimePeriod } from './models/time-period.enum';\nimport { merge, Subscription } from 'rxjs';\nimport { NgxMaterialTimepickerService } from './services/ngx-material-timepicker.service';\nimport { TimeUnit } from './models/time-unit.enum';\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport { NgxMaterialTimepickerEventService } from './services/ngx-material-timepicker-event.service';\nimport { filter } from 'rxjs/operators';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { Moment } from 'moment';\n\nexport enum AnimationState {\n    ENTER = 'enter',\n    LEAVE = 'leave'\n}\n\n\nconst ESCAPE = 27;\n\n@Component({\n    selector: 'ngx-material-timepicker',\n    templateUrl: './ngx-material-timepicker.component.html',\n    styleUrls: ['./ngx-material-timepicker.component.scss'],\n    animations: [\n        trigger('timepicker', [\n            transition(`* => ${AnimationState.ENTER}`, [\n                style({transform: 'translateY(-30%)'}),\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\n            ]),\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\n                style({transform: 'translateY(0)', opacity: 1}),\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\n            ])\n        ])\n    ],\n    providers: [NgxMaterialTimepickerService]\n})\nexport class NgxMaterialTimepickerComponent implements OnInit, OnDestroy {\n\n    selectedHour: ClockFaceTime;\n    selectedMinute: ClockFaceTime;\n    selectedPeriod: TimePeriod;\n\n    timeUnit = TimeUnit;\n    activeTimeUnit = TimeUnit.HOUR;\n\n    isOpened = false;\n    animationState: AnimationState;\n\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\n    @Input('ESC') isEsc = true;\n    @Input() enableKeyboardInput: boolean;\n    @Input() preventOverlayClick: boolean;\n\n    @Input()\n    set minutesGap(gap: number) {\n        if (gap == null) {\n            return;\n        }\n        gap = Math.floor(gap);\n        this._minutesGap = gap <= 59 ? gap : 1;\n    }\n\n    get minutesGap(): number {\n        return this._minutesGap;\n    }\n\n    @Input()\n    set defaultTime(time: string) {\n        this.setDefaultTime(time);\n    }\n\n    @Output() timeSet = new EventEmitter<string>();\n    @Output() opened = new EventEmitter<null>();\n    @Output() closed = new EventEmitter<null>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    @ViewChild('timepickerww') timepickerComponent: ElementRef;\n\n    private _minutesGap: number;\n    private timepickerInput: TimepickerDirective;\n    private subscriptions: Subscription[] = [];\n\n    constructor(private timepickerService: NgxMaterialTimepickerService,\n                private eventService: NgxMaterialTimepickerEventService) {\n\n        this.subscriptions.push(merge(this.eventService.backdropClick,\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\n            .subscribe(() => this.close()));\n\n    }\n\n    get minTime(): string | Moment {\n        return this.timepickerInput && this.timepickerInput.min;\n    }\n\n    get maxTime(): string | Moment {\n        return this.timepickerInput && this.timepickerInput.max;\n    }\n\n    get disabled(): boolean {\n        return this.timepickerInput && this.timepickerInput.disabled;\n    }\n\n    get format(): number {\n        return this.timepickerInput && this.timepickerInput.format;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(this.timepickerService.selectedHour\n            .subscribe(hour => this.selectedHour = hour));\n\n        this.subscriptions.push(this.timepickerService.selectedMinute\n            .subscribe(minute => this.selectedMinute = minute));\n\n        this.subscriptions.push(this.timepickerService.selectedPeriod\n            .subscribe(period => this.selectedPeriod = period));\n    }\n\n    /***\n     * Register an input with this timepicker.\n     * input - The timepicker input to register with this timepicker\n     */\n    registerInput(input: TimepickerDirective): void {\n        if (this.timepickerInput) {\n            throw Error('A Timepicker can only be associated with a single input.');\n        }\n        this.timepickerInput = input;\n    }\n\n    onHourChange(hour: ClockFaceTime): void {\n        this.timepickerService.hour = hour;\n    }\n\n    onHourSelected(hour: number): void {\n        this.changeTimeUnit(TimeUnit.MINUTE);\n        this.hourSelected.next(hour);\n    }\n\n    onMinuteChange(minute: ClockFaceTime): void {\n        this.timepickerService.minute = minute;\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.timepickerService.period = period;\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.activeTimeUnit = unit;\n    }\n\n    setTime(): void {\n        this.timeSet.next(this.timepickerService.getFullTime(this.format));\n        this.close();\n    }\n\n    setDefaultTime(time: string): void {\n        this.timepickerService.setDefaultTimeIfAvailable(\n            time, this.minTime as Moment, this.maxTime as Moment, this.format, this.minutesGap);\n    }\n\n    open(): void {\n        this.isOpened = true;\n        this.animationState = AnimationState.ENTER;\n        this.opened.next();\n    }\n\n    close(): void {\n        this.animationState = AnimationState.LEAVE;\n    }\n\n    animationDone(event: AnimationEvent): void {\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n            this.isOpened = false;\n            this.activeTimeUnit = TimeUnit.HOUR;\n            this.closed.next();\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeydown(e: KeyboardEvent) {\n        this.eventService.dispatchEvent(e);\n        e.stopPropagation();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n}\n","import {Directive} from '@angular/core';\n\n/* To override a default toggle icon */\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\n\nexport class NgxMaterialTimepickerToggleIconDirective {\n}\n","import {Component, ContentChild, Input} from '@angular/core';\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\n\n@Component({\n    selector: 'ngx-material-timepicker-toggle',\n    templateUrl: 'ngx-material-timepicker-toggle.component.html',\n    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\n})\n\nexport class NgxMaterialTimepickerToggleComponent {\n\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    private _disabled: boolean;\n\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective) customIcon: NgxMaterialTimepickerToggleIconDirective;\n\n    open(event): void {\n        if (this.timepicker) {\n            this.timepicker.open();\n            event.stopPropagation();\n        }\n    }\n}\n","import {Directive, ElementRef, forwardRef, HostListener, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {NgxMaterialTimepickerComponent} from '../ngx-material-timepicker.component';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {Moment} from 'moment';\nimport {TimeAdapter} from '../services/time-adapter';\n\nconst VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line\n    useExisting: forwardRef(() => TimepickerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: '[ngxTimepicker]',\n    providers: [VALUE_ACCESSOR],\n    host: {\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(blur)': 'onTouched()',\n    },\n})\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n    }\n\n    get format(): number {\n        return this._format;\n    }\n\n    private _format = 12;\n\n    @Input()\n    set min(value: string | Moment) {\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.convertTimeToMoment(value);\n            return;\n        }\n        this._min = value;\n    }\n\n    get min(): string | Moment {\n        return this._min;\n    }\n\n    private _min: string | Moment;\n\n    @Input()\n    set max(value: string | Moment) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.convertTimeToMoment(value);\n            return;\n        }\n        this._max = value;\n    }\n\n    get max(): string | Moment {\n        return this._max;\n    }\n\n    private _max: string | Moment;\n\n    @Input('ngxTimepicker')\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\n        this.registerTimepicker(picker);\n    }\n    private _timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    set value(value: string) {\n        if (!value) {\n            this._value = '';\n            this.updateInputValue();\n            return;\n        }\n        const time = TimeAdapter.formatTime(value, this._format);\n        if (TimeAdapter.isTimeAvailable(time, <Moment>this._min, <Moment>this._max, 'minutes', this._timepicker.minutesGap)) {\n            this._value = time;\n            this.updateInputValue();\n            return;\n        }\n        console.warn('Selected time doesn\\'t match min or max value');\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    private _value = '';\n\n    @Input() disabled: boolean;\n    @Input() disableClick: boolean;\n    private timepickerSubscriptions: Subscription[] = [];\n    onTouched = () => {};\n    private onChange: (value: any) => void = () => {};\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    private set defaultTime(time: string) {\n        this._timepicker.setDefaultTime(time);\n    }\n\n    onInput(value: string) {\n        this.value = value;\n        this.onChange(value);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['value'] && changes['value'].currentValue) {\n            this.defaultTime = changes['value'].currentValue;\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event) {\n        if (!this.disableClick) {\n            this._timepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        this.defaultTime = value;\n    }\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    ngOnDestroy() {\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\n    }\n\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\n        if (picker) {\n            this._timepicker = picker;\n            this._timepicker.registerInput(this);\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\n                this.value = time;\n                this.onChange(this._value);\n                this.onTouched();\n            }));\n            this.timepickerSubscriptions.push(\n                this._timepicker.closed.subscribe(() => this.defaultTime = this._value));\n        } else {\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\n        }\n    }\n\n    private updateInputValue(): void {\n        this.elementRef.nativeElement.value = this.value;\n    }\n\n}\n\n","import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {NgxMaterialTimepickerTheme} from '../models/ngx-material-timepicker-theme.interface';\n\n@Directive({selector: '[ngxMaterialTimepickerTheme]'})\nexport class NgxMaterialTimepickerThemeDirective implements AfterViewInit {\n\n    @Input('ngxMaterialTimepickerTheme') theme: NgxMaterialTimepickerTheme;\n\n    private element: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngAfterViewInit() {\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n    }\n\n    private setTheme(theme): void {\n        for (const val in theme) {\n            if (theme.hasOwnProperty(val)) {\n                if (typeof theme[val] === 'string') {\n                    for (const prop in theme) {\n                        if (theme.hasOwnProperty(prop)) {\n                            this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n                        }\n                    }\n                    return;\n                }\n                this.setTheme(theme[val]);\n            }\n\n        }\n    }\n}\n\nfunction camelCaseToDash(myStr) {\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n","import {ClockFaceTime} from './models/clock-face-time.interface';\nimport * as _moment from 'moment';\nimport {TimeAdapter} from './services/time-adapter';\nimport {TimeFormat} from './models/time-format.enum';\nimport {DisabledTimeConfig} from './models/disabled-time-config.interface';\n\nconst moment = _moment;\n\nexport namespace TimepickerTime {\n\n    export function getHours(format: number): ClockFaceTime[] {\n        return Array(format).fill(1).map((v, i) => {\n            const angleStep = 30;\n            const time = v + i;\n            const angle = angleStep * time;\n            return {time: time === 24 ? 0 : time, angle};\n        });\n    }\n\n    export function disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\n        if (config.min || config.max) {\n\n            return hours.map(value => {\n                const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(+value.time, config.format, config.period);\n                const currentTime = moment().hour(+hour).format(TimeFormat.TWELVE);\n\n                return {\n                    ...value,\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\n                };\n            });\n        }\n        return hours;\n    }\n\n    export function getMinutes(gap = 1): ClockFaceTime[] {\n        const minutesCount = 60;\n        const angleStep = 360 / minutesCount;\n        const minutes = [];\n\n        for (let i = 0; i < minutesCount; i++) {\n            const angle = angleStep * i;\n            if (i % gap === 0) {\n                minutes.push({time: i, angle: angle !== 0 ? angle : 360});\n            }\n        }\n        return minutes;\n    }\n\n    export function disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\n        if (config.min || config.max) {\n\n            const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n\n            return minutes.map(value => {\n                const currentTime = moment().hour(hour).minute(+value.time).format(TimeFormat.TWELVE);\n\n                return {\n                    ...value,\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\n                };\n            });\n        }\n        return minutes;\n    }\n}\n","import {EventEmitter, Input, Output} from '@angular/core';\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\nimport {Moment} from 'moment';\nimport {TimepickerTime} from '../../timepicker-time.namespace';\n\n\nexport class NgxMaterialTimepickerHoursFace {\n\n    @Input() selectedHour: ClockFaceTime;\n    @Input() minTime: Moment;\n    @Input() maxTime: Moment;\n    @Input() format: number;\n\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    hoursList: ClockFaceTime[] = [];\n\n    protected constructor(format: number) {\n        this.hoursList = TimepickerTime.getHours(format);\n    }\n\n    onTimeSelected(time: number): void {\n        this.hourSelected.next(time);\n    }\n}\n","import {AfterContentInit, Component} from '@angular/core';\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport {TimepickerTime} from '../../timepicker-time.namespace';\n\n@Component({\n    selector: 'ngx-material-timepicker-24-hours-face',\n    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html'\n})\n\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\n\n    constructor() {\n        super(24);\n    }\n\n    ngAfterContentInit() {\n        this.hoursList = TimepickerTime.disableHours(this.hoursList, {\n            min: this.minTime,\n            max: this.maxTime,\n            format: this.format\n        });\n    }\n}\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport {TimePeriod} from '../../models/time-period.enum';\nimport {TimepickerTime} from '../../timepicker-time.namespace';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-12-hours-face',\n    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html'\n})\n\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\n\n    @Input() period: TimePeriod;\n\n    constructor() {\n        super(12);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            this.hoursList = TimepickerTime.disableHours(this.hoursList, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\nimport {TimeUnit} from '../../models/time-unit.enum';\nimport {TimePeriod} from '../../models/time-period.enum';\nimport {Moment} from 'moment';\nimport {TimepickerTime} from '../../timepicker-time.namespace';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-minutes-face',\n    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\n})\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\n\n    minutesList: ClockFaceTime[] = [];\n    timeUnit = TimeUnit;\n\n    @Input() selectedMinute: ClockFaceTime;\n    @Input() selectedHour: number;\n    @Input() period: TimePeriod;\n    @Input() minTime: Moment;\n    @Input() maxTime: Moment;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            const minutes = TimepickerTime.getMinutes(this.minutesGap);\n            this.minutesList = TimepickerTime.disableMinutes(minutes, this.selectedHour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\n\nconst CLOCK_HAND_STYLES = {\n    small: {\n        height: '75px',\n        top: 'calc(50% - 75px)'\n    },\n    large: {\n        height: '103px',\n        top: 'calc(50% - 103px)'\n    }\n};\n\n@Component({\n    selector: 'ngx-material-timepicker-face',\n    templateUrl: './ngx-material-timepicker-face.component.html',\n    styleUrls: ['./ngx-material-timepicker-face.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n    timeUnit = TimeUnit;\n\n    isClockFaceDisabled: boolean;\n    innerClockFaceSize = 85;\n\n    @Input() faceTime: ClockFaceTime[];\n    @Input() selectedTime: ClockFaceTime;\n    @Input() unit: TimeUnit;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\n    @Output() timeSelected = new EventEmitter<number>();\n\n    @ViewChild('clockFace') clockFace: ElementRef;\n    @ViewChild('clockHand') clockHand: ElementRef;\n\n    private isStarted: boolean;\n    private touchStartHandler: () => any;\n    private touchEndHandler: () => any;\n\n    ngAfterViewInit() {\n        this.setClockHandPosition();\n        this.addTouchEvents();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const faceTimeChanges = changes['faceTime'];\n        const selectedTimeChanges = changes['selectedTime'];\n\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\n            /* Set time according to passed an input value */\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\n        }\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\n            this.setClockHandPosition();\n        }\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\n            setTimeout(() => this.selectAvailableTime());\n        }\n    }\n\n\n    trackByTime(_, time: ClockFaceTime): string | number {\n        return time.time;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMousedown(e: MouseEvent | TouchEvent) {\n        e.preventDefault();\n        this.isStarted = true;\n    }\n\n    @HostListener('click', ['$event'])\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\n    @HostListener('touchend', ['$event.changedTouches[0]'])\n    @HostListener('mousemove', ['$event'])\n    selectTime(e: MouseEvent | Touch): void {\n\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\n            return;\n        }\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\n\n        /* Get x0 and y0 of the circle */\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\n        /* Counting the arctangent and convert it to from radian to deg */\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\n        /* Get angle according to quadrant */\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\n        /* Check if selected time from the inner clock face (24 hours format only) */\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\n        /* Round angle according to angle step */\n        const angleStep = this.unit === TimeUnit.MINUTE ? 6 : 30;\n        const roundedAngle = isInnerClockChosen\n            ? roundAngle(circleAngle, angleStep) + 360\n            : roundAngle(circleAngle, angleStep);\n        const angle = roundedAngle === 0 ? 360 : roundedAngle;\n\n        const selectedTime = this.faceTime.find(val => val.angle === angle);\n\n        if (selectedTime && !selectedTime.disabled) {\n            this.timeChange.next(selectedTime);\n\n            /* To let know whether user ended interaction with clock face */\n            if (!this.isStarted) {\n                this.timeSelected.next(selectedTime.time);\n            }\n        }\n\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onMouseup(e: MouseEvent | TouchEvent) {\n        e.preventDefault();\n        this.isStarted = false;\n    }\n\n    isHourSelected(hour: number): boolean {\n        return (hour === this.selectedTime.time) && !this.isClockFaceDisabled;\n    }\n\n    isMinuteSelected(minute: number): boolean {\n        return ((this.selectedTime.time === minute) && (minute % (this.minutesGap || 5) === 0)) && !this.isClockFaceDisabled;\n    }\n\n    ngOnDestroy() {\n        this.removeTouchEvents();\n    }\n\n    private addTouchEvents(): void {\n        this.touchStartHandler = this.onMousedown.bind(this);\n        this.touchEndHandler = this.onMouseup.bind(this);\n\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\n    }\n\n    private removeTouchEvents(): void {\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\n    }\n\n    private setClockHandPosition(): void {\n        if (this.format === 24) {\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\n                this.decreaseClockHand();\n            } else {\n                this.increaseClockHand();\n            }\n        }\n\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\n    }\n\n    private selectAvailableTime(): void {\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\n\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\n            const availableTime = this.faceTime.find(time => !time.disabled);\n\n            this.timeChange.next(availableTime);\n        }\n    }\n\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\n        /* Detect whether time from the inner clock face or not (24 format only) */\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\n    }\n\n    private decreaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\n    }\n\n    private increaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\n    }\n}\n\nfunction roundAngle(angle: number, step: number): number {\n    return Math.round(angle / step) * step;\n}\n\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\n    if (y > y0 && x >= x0) {// II quarter\n        return 180 - currentAngle;\n    } else if (y > y0 && x < x0) {// III quarter\n        return 180 + currentAngle;\n    } else if (y < y0 && x < x0) {// IV quarter\n        return 360 - currentAngle;\n    } else {// I quarter\n        return currentAngle;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'ngx-material-timepicker-button',\n    templateUrl: './ngx-material-timepicker-button.component.html',\n    styleUrls: ['./ngx-material-timepicker-button.component.scss']\n})\nexport class NgxMaterialTimepickerButtonComponent {\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, TemplateRef } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimepickerTime } from '../../timepicker-time.namespace';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { Moment } from 'moment';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial',\n    templateUrl: 'ngx-material-timepicker-dial.component.html',\n    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\n\n    timeUnit = TimeUnit;\n\n    hours: ClockFaceTime[];\n    minutes: ClockFaceTime[];\n\n    isHintVisible: boolean;\n\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() hour: number | string;\n    @Input() minute: number | string;\n    @Input() format: number;\n    @Input() period: TimePeriod;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() minTime: Moment;\n    @Input() maxTime: Moment;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue\n            || changes['format'] && changes['format'].currentValue) {\n            const hours = TimepickerTime.getHours(this.format);\n\n            this.hours = TimepickerTime.disableHours(hours, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n        if (changes['period'] && changes['period'].currentValue\n            || changes['hour'] && changes['hour'].currentValue) {\n            const minutes = TimepickerTime.getMinutes(this.minutesGap);\n\n            this.minutes = TimepickerTime.disableMinutes(minutes, +this.hour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.timeUnitChanged.next(unit);\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.periodChanged.next(period);\n    }\n\n    changeHour(hour: ClockFaceTime): void {\n        this.hourChanged.next(hour);\n    }\n\n    changeMinute(minute: ClockFaceTime): void {\n        this.minuteChanged.next(minute);\n    }\n\n    showHint(): void {\n        this.isHintVisible = true;\n    }\n\n    hideHint(): void {\n        this.isHintVisible = false;\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeUnit} from '../models/time-unit.enum';\n\n@Pipe({\n    name: 'timeFormatter'\n})\nexport class TimeFormatterPipe implements PipeTransform {\n\n    transform(time: number, timeUnit: TimeUnit): any {\n        if (time === undefined) {\n            return time;\n        }\n        switch (timeUnit) {\n            case TimeUnit.HOUR:\n                return moment.utc(time * 3600 * 1000).format('HH');\n            case TimeUnit.MINUTE:\n                return moment.utc(time * 60 * 1000).format('mm');\n            default:\n                throw new Error('no such time unit');\n        }\n    }\n\n}\n","/* tslint:disable:triple-equals */\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimeFormatterPipe } from '../../pipes/time-formatter.pipe';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial-control',\n    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\n    styleUrls: ['ngx-material-timepicker-dial-control.component.scss']\n})\nexport class NgxMaterialTimepickerDialControlComponent implements OnChanges {\n\n    previousTime: number | string;\n\n    @Input() timeList: ClockFaceTime[];\n    @Input() timeUnit: TimeUnit;\n    @Input() time: string;\n    @Input() isActive: boolean;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\n    @Output() focused = new EventEmitter<null>();\n    @Output() unfocused = new EventEmitter<null>();\n\n    private get selectedTime(): ClockFaceTime {\n        if (!!this.time) {\n            return this.timeList.find(t => t.time === +this.time);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['time'] && (changes['time'].currentValue !== undefined)) {\n            if (this.isEditable && !changes['time'].firstChange) {\n                return;\n            }\n            this.time = new TimeFormatterPipe().transform(+changes['time'].currentValue, this.timeUnit);\n        }\n    }\n\n    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void {\n        event.preventDefault();\n        this.previousTime = this.time;\n        this.timeUnitChanged.next(unit);\n        this.focused.next();\n    }\n\n    updateTime(): void {\n        const time = this.selectedTime;\n        if (time) {\n            this.timeChanged.next(time);\n            this.previousTime = time.time;\n        }\n    }\n\n    formatTime(): void {\n        if (this.isEditable) {\n            const time = this.time || this.previousTime;\n            this.time = new TimeFormatterPipe().transform(+time, this.timeUnit);\n            this.unfocused.next();\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        const char = String.fromCharCode(e.keyCode);\n\n\n        if ((!isInputAllowed(e)) || isTimeDisabledToChange(this.time, char, this.timeList)) {\n            e.preventDefault();\n        }\n\n        if (isInputAllowed(e)) {\n            this.changeTimeByArrow(e.keyCode);\n        }\n    }\n\n    private changeTimeByArrow(keyCode: number): void {\n        const ARROW_UP = 38;\n        const ARROW_DOWN = 40;\n        let time: string;\n\n        if (keyCode === ARROW_UP) {\n            time = String(+this.time + (this.minutesGap || 1));\n        } else if (keyCode === ARROW_DOWN) {\n            time = String(+this.time - (this.minutesGap || 1));\n        }\n\n        if (!isTimeUnavailable(time, this.timeList)) {\n            this.time = time;\n            this.updateTime();\n        }\n    }\n\n}\n\nfunction isInputAllowed(e: KeyboardEvent): boolean {\n    // Allow: backspace, delete, tab, escape, enter\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\n        // Allow: Ctrl/cmd+A\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+C\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+X\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: home, end, left, right, up, down\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\n\n        return true;\n    }\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\n}\n\nfunction isTimeDisabledToChange(currentTime: string, nextTime: string, timeList: ClockFaceTime[]): boolean {\n    const isNumber = /\\d/.test(nextTime);\n\n    if (isNumber) {\n        const time = currentTime + nextTime;\n        return isTimeUnavailable(time, timeList);\n    }\n}\n\nfunction isTimeUnavailable(time: string, timeList: ClockFaceTime[]): boolean {\n    const selectedTime = timeList.find(value => value.time === +time);\n    return !selectedTime || (selectedTime && selectedTime.disabled);\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {TimePeriod} from '../../models/time-period.enum';\nimport {TimeUnit} from '../../models/time-unit.enum';\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\nimport {TimepickerTime} from '../../timepicker-time.namespace';\nimport {Moment} from 'moment';\nimport {animate, sequence, style, transition, trigger} from '@angular/animations';\n\n@Component({\n    selector: 'ngx-material-timepicker-period',\n    templateUrl: 'ngx-material-timepicker-period.component.html',\n    styleUrls: ['ngx-material-timepicker-period.component.scss'],\n    animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({transform: 'scale(0)'}),\n                animate('.2s', style({transform: 'scale(1)'})),\n                sequence([\n                    animate('3s', style({opacity: 1})),\n                    animate('.3s', style({opacity: 0}))\n                ])\n            ])\n        ])\n    ]\n})\nexport class NgxMaterialTimepickerPeriodComponent {\n\n    timePeriod = TimePeriod;\n    isPeriodAvailable = true;\n\n    @Input() selectedPeriod: TimePeriod;\n    @Input() format: number;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() hours: ClockFaceTime[];\n    @Input() minutes: ClockFaceTime[];\n    @Input() minTime: Moment;\n    @Input() maxTime: Moment;\n    @Input() selectedHour: number | string;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n\n    changePeriod(period: TimePeriod): void {\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\n        if (this.isPeriodAvailable) {\n            this.periodChanged.next(period);\n        }\n    }\n\n    animationDone(): void {\n        this.isPeriodAvailable = true;\n    }\n\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\n        const time = this.getDisabledTimeByPeriod(period);\n        return !time.every(t => t.disabled);\n    }\n\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\n        switch (this.activeTimeUnit) {\n            case TimeUnit.HOUR:\n                return TimepickerTime.disableHours(this.hours, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            case TimeUnit.MINUTE:\n                return TimepickerTime.disableMinutes(this.minutes, +this.selectedHour, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            default:\n                throw new Error('no such TimeUnit');\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n    name: 'styleSanitizer'\n})\nexport class StyleSanitizerPipe implements PipeTransform {\n\n    constructor(private domSanitizer: DomSanitizer) {\n    }\n\n    transform(value: string): any {\n        if (!value) {\n            return value;\n        }\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\n    }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport {NgxMaterialTimepickerEventService} from '../services/ngx-material-timepicker-event.service';\n\n@Directive({\n    selector: '[overlay]'\n})\nexport class OverlayDirective {\n\n    @Input('overlay') preventClick: boolean;\n\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\n    }\n\n\n    @HostListener('click', ['$event'])\n    onClick(e: MouseEvent) {\n        if (!this.preventClick) {\n            this.eventService.dispatchEvent(e);\n        }\n        e.preventDefault();\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'minutesFormatter'\n})\nexport class MinutesFormatterPipe implements PipeTransform {\n\n    transform(minute: number, gap = 5): number | string {\n        if (!minute) {\n            return minute;\n        }\n\n        return minute % gap === 0 ? minute : '';\n    }\n\n}\n","import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: '[timepickerAutofocus]'\n})\nexport class AutofocusDirective implements OnChanges, OnDestroy {\n\n    @Input('timepickerAutofocus') isFocusActive: boolean;\n\n    private activeElement: HTMLElement;\n\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\n        this.activeElement = this.document.activeElement;\n    }\n\n    ngOnChanges() {\n        if (this.isFocusActive) {\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n            setTimeout(() => this.element.nativeElement.focus());\n        }\n    }\n\n    ngOnDestroy() {\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n        setTimeout(() => this.activeElement.focus());\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxMaterialTimepickerComponent} from './ngx-material-timepicker.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMaterialTimepickerToggleComponent} from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\nimport {TimepickerDirective} from './directives/ngx-timepicker.directive';\nimport {NgxMaterialTimepickerToggleIconDirective} from './directives/ngx-material-timepicker-toggle-icon.directive';\nimport {NgxMaterialTimepickerThemeDirective} from './directives/ngx-material-timepicker-theme.directive';\nimport {\n    NgxMaterialTimepicker24HoursFaceComponent\n} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\nimport {\n    NgxMaterialTimepicker12HoursFaceComponent\n} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\nimport {\n    NgxMaterialTimepickerMinutesFaceComponent\n} from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\nimport {NgxMaterialTimepickerFaceComponent} from './components/timepicker-face/ngx-material-timepicker-face.component';\nimport {NgxMaterialTimepickerButtonComponent} from './components/timepicker-button/ngx-material-timepicker-button.component';\nimport {NgxMaterialTimepickerDialComponent} from './components/timepicker-dial/ngx-material-timepicker-dial.component';\nimport {\n    NgxMaterialTimepickerDialControlComponent\n} from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\nimport {NgxMaterialTimepickerPeriodComponent} from './components/timepicker-period/ngx-material-timepicker-period.component';\nimport {StyleSanitizerPipe} from './pipes/style-sanitizer.pipe';\nimport {TimeFormatterPipe} from './pipes/time-formatter.pipe';\nimport {OverlayDirective} from './directives/overlay.directive';\nimport {MinutesFormatterPipe} from './pipes/minutes-formatter.pipe';\nimport {AutofocusDirective} from './directives/autofocus.directive';\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\nimport {NgxMaterialTimepickerEventService} from './services/ngx-material-timepicker-event.service';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepickerToggleComponent,\n        TimepickerDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        NgxMaterialTimepickerThemeDirective\n    ],\n    declarations: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepicker24HoursFaceComponent,\n        NgxMaterialTimepicker12HoursFaceComponent,\n        NgxMaterialTimepickerMinutesFaceComponent,\n        NgxMaterialTimepickerFaceComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxMaterialTimepickerButtonComponent,\n        NgxMaterialTimepickerDialComponent,\n        NgxMaterialTimepickerDialControlComponent,\n        NgxMaterialTimepickerPeriodComponent,\n        StyleSanitizerPipe,\n        TimeFormatterPipe,\n        TimepickerDirective,\n        OverlayDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        AutofocusDirective,\n        MinutesFormatterPipe,\n        NgxMaterialTimepickerThemeDirective\n    ]\n})\nexport class NgxMaterialTimepickerModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxMaterialTimepickerModule,\n            providers: [NgxMaterialTimepickerService, NgxMaterialTimepickerEventService]\n        };\n    }\n}\n"],"names":["moment","_moment","moment_","BehaviorSubject","Injectable","Subject","EventEmitter","merge","filter","Component","trigger","transition","style","animate","Input","Output","ViewChild","HostListener","Directive","ContentChild","NG_VALUE_ACCESSOR","forwardRef","ElementRef","tslib_1.__extends","ChangeDetectionStrategy","moment.utc","Pipe","sequence","DomSanitizer","Optional","Inject","DOCUMENT","NgModule","CommonModule","FormsModule"],"mappings":"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"}
